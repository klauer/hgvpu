record(dfanout,"$(U):Step") {
  field(DESC,"Open undulator for TWV value step")
  field(ASG,"SYSTEM")
  field(DOL,"1")
  field(OUTA,"$(U):USWMotor.TWF PP")
  field(OUTB,"$(U):USAMotor.TWF PP")
  field(OUTC,"$(U):DSWMotor.TWF PP")
  field(OUTD,"$(U):DSAMotor.TWF PP")
}
########################################################
record(calc,"$(U):MotorsMoving") {
  field(DESC,"Motors Moving")
  field(CALC,"!(A&&B&&C&&D)")
  field(INPA,"$(U):USWMotor.DMOV CP NMS")
  field(INPB,"$(U):USAMotor.DMOV CP NMS")
  field(INPC,"$(U):DSWMotor.DMOV CP NMS")
  field(INPD,"$(U):DSAMotor.DMOV CP NMS")
}
########################################################
record(dfanout,"$(U):StopMotors") {
  field(DESC,"STOP all Motors")
  field(ASG,"SYSTEM")
  field(DOL,"1")
  field(OUTA,"$(U):USWMotor.STOP PP")
  field(OUTB,"$(U):USAMotor.STOP PP")
  field(OUTC,"$(U):DSWMotor.STOP PP")
  field(OUTD,"$(U):DSAMotor.STOP PP")
  field(OUTE,"$(U):GapMotor.STOP PP")
}
########################################################
# Set Velocity on all motors
########################################################
record(ao,"$(U):MotorVelocity") {
  field(DESC,"Set Motors Velocity")
  field(ASG,"SYSTEM")
  field(PINI,"YES")
  field(DOL,"$(S)")
  field(DRVL,"0.005")
  field(DRVH,"5")
  field(OUT,"$(U):SetMotorVelocity PP")
  field(PREC,"3")
  field(EGU,"mm/s")
}
record(dfanout,"$(U):SetMotorVelocity") {
  field(DESC,"Set all Motors Velocity")
  field(DOL,"$(U):MotorVelocity.VAL")
  field(OUTA,"$(U):USWMotor.VELO PP")
  field(OUTB,"$(U):USAMotor.VELO PP")
  field(OUTC,"$(U):DSWMotor.VELO PP")
  field(OUTD,"$(U):DSAMotor.VELO PP")
}
########################################################
# Control SET field on all motors
########################################################
record(bo,"$(U):MotorsSet") {
  field(DESC,"Set Motor")
  field(ASG,"SYSTEM")
  field(OUT,"$(U):SetMotors PP") 
  field(ZNAM,"Use")
  field(ONAM,"Set")
}
record(dfanout,"$(U):SetMotors") {
  field(DESC,"Set all Motors")
  field(DOL,"$(U):SetMotors.VAL")
  field(OUTA,"$(U):USWMotor.SET PP")
  field(OUTB,"$(U):USAMotor.SET PP")
  field(OUTC,"$(U):DSWMotor.SET PP")
  field(OUTD,"$(U):DSAMotor.SET PP")
}
########################################################
# Control SPMG field on all motors
########################################################
record(mbbo,"$(U):MotorsSPMG") {
  field(DESC,"Set Motor SPMG")
  field(ASG,"SYSTEM")
  field(OUT,"$(U):SetMotorsSPMG PP") 
  field(ZRST,"Stop")
  field(ZRVL,"0")
  field(ONST,"Pause")
  field(ONVL,"1")
  field(TWST,"Move")
  field(TWVL,"2")
  field(THST,"Go")
  field(THVL,"3")
  field(NOBT,"4")
}
record(dfanout,"$(U):SetMotorsSPMG") {
  field(DESC,"Set all Motors SPMG")
  field(DOL,"$(U):SetMotorsSPMG.VAL")
  field(OUTA,"$(U):USWMotor.SPMG PP")
  field(OUTB,"$(U):USAMotor.SPMG PP")
  field(OUTC,"$(U):DSWMotor.SPMG PP")
  field(OUTD,"$(U):DSAMotor.SPMG PP")
}
########################################################
# Move all motors to the same value (no synchronization)
########################################################
record(ao,"$(U):MotorsGap") {
  field(DESC,"Set Motors Gap")
  field(ASG,"SYSTEM")
  field(OUT,"$(U):SetMotorsGap PP")
  field(PREC,"3")
  field(EGU,"mm")
}
record(dfanout,"$(U):SetMotorsGap") {
  field(DESC,"Set All Motors to Move")
  field(DOL,"$(U):MotorsGap.VAL")
  field(OUTA,"$(U):USWMotor.VAL PP")
  field(OUTB,"$(U):USAMotor.VAL PP")
  field(OUTC,"$(U):DSWMotor.VAL PP")
  field(OUTD,"$(U):DSAMotor.VAL PP")
}
########################################################
# Calibrates motor with encoder based position
########################################################
record(seq,"$(U):CalibrateMotors") {
  field(DESC,"Calibrate Motors <= End")
  field(ASG,"SYSTEM")
  field(DOL1,"0")
  field(LNK1,"$(U):MotorsSPMG.VAL PP NMS")
  field(DLY2,"0.1")
  field(DOL2,"1")
  field(LNK2,"$(U):MotorsSet.VAL PP NMS")
  field(DLY3,"0.1")
  field(DOL3,"$(U):USWMotorGap.VAL NPP NMS")
  field(LNK3,"$(U):USWMotor.VAL PP NMS")
  field(DOL4,"$(U):USAMotorGap.VAL NPP NMS")
  field(LNK4,"$(U):USAMotor.VAL PP NMS")
  field(DOL5,"$(U):DSWMotorGap.VAL NPP NMS")
  field(LNK5,"$(U):DSWMotor.VAL PP NMS")
  field(DOL6,"$(U):DSAMotorGap.VAL NPP NMS")
  field(LNK6,"$(U):DSAMotor.VAL PP NMS")
  field(DLY7,"0.1")
  field(DOL7,"3")
  field(LNK7,"$(U):MotorsSPMG.VAL PP NMS")
  field(DLY8,"0.1")
  field(DOL8,"0")
  field(LNK8,"$(U):MotorsSPMG.VAL PP NMS")
  field(DLY9,"0.1")
  field(DOL9,"0")
  field(LNK9,"$(U):MotorsSet.VAL PP NMS")
  field(DLYA,"0.1")
  field(DOLA,"3")
  field(LNKA,"$(U):MotorsSPMG.VAL PP NMS")
}
########################################################
# Allows a gap move without pressing the start button
# ScanGapCheck presses the start button
########################################################
record(ai,"$(U):ScanGap") {
  field(DESC,"ID Gap Scan Input")
  field(PREC,"3")
  field(EGU,"mm")
  field(FLNK,"$(U):ScanGapSQ.PROC")
}
record(seq,"$(U):ScanGapSQ") {
  field(DESC,"Start the Gap Scan")
  field(DOL1,"$(U):ScanGap.VAL NPP NMS")
  field(LNK1,"$(U):GapSet.VAL PP NMS")
  field(DOL2,"1")
  field(DLY2,".05")
  field(LNK2,"$(U):ScanGapCheck.PROC PP NMS")
}
record(calcout,"$(U):ScanGapCheck") {
  field(DESC,"Start Device if Good Gap")
  field(CALC,"!A")
  field(INPA,"$(U):GapCheck.VAL NPP NMS")
  field(OUT,"$(U):Start.VAL PP NMS")
  field(OOPT,"When Non-zero")
  field(DOPT,"Use CALC")
}
##############################################################
record(seq,"$(U):FullOpen") {
  field(DESC,"Fully Open Device ")
  field(DOL1,"$(U):GapDes.DRVH NPP NMS")
  field(LNK1,"$(U):ScanGap.VAL PP")
}
record(seq,"$(U):FullClose") {
  field(DESC,"Fully Close Device ")
  field(DOL1,"$(U):GapDes.DRVL NPP NMS")
  field(LNK1,"$(U):ScanGap.VAL PP NMS")
}

