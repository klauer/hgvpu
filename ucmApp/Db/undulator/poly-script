#!/bin/bash
line0="#Automatically generated by poly-script, do not modify!"
line1="file poly.template{"
line2="  pattern { LINE0, POSITION, SN, KVSXCOEF0, KVSXCOEF1, KVSXCOEF2, KVSXCOEF3, KVSXCOEF4, KVSXCOEF5, XVSKCOEF0, XVSKCOEF1, XVSKCOEF2, XVSKCOEF3, XVSKCOEF4, XVSKCOEF5, I1XCOEF0, I1XCOEF1, I1XCOEF2, I1XCOEF3, I1XCOEF4, I1XCOEF5, I2XCOEF0, I2XCOEF1, I2XCOEF2, I2XCOEF3, I2XCOEF4, I2XCOEF5 , I1YCOEF0, I1YCOEF1, I1YCOEF2, I1YCOEF3, I1YCOEF4, I1YCOEF5, I2YCOEF0, I2YCOEF1, I2YCOEF2, I2YCOEF3, I2YCOEF4, I2YCOEF5, TEMP, GIRDERSN, BFWSN, TYPE, KOFFSET, R, XINMIN, XINMAX, PERIOD}"
echo $1
for i in `seq 2  35`
do
   echo $line0 | cat > temp.substitutions
   echo $line1 | cat >> temp.substitutions
   echo $line2 | cat >> temp.substitutions
   line3=$(sed -n "$i"p UndulatorPolynomials.csv)
   und=$(echo $line3 | awk -F, '{print $1}')
   echo { \"$line0\" $line3 > temp
   sed 's/$/}/' temp >> temp.substitutions
   echo } | cat >> temp.substitutions
   msi -o ./useg"$und"-poly.substitutions -S temp.substitutions useg-poly.template
done

line1="file st_new.template{"
line2="  pattern { LINE0, NUM, SEG, SEGN1, NOTM}"

newLine1="file st_new.template{"
newLine2="  pattern { LINE0, NUM, SEG, SEGN1, NOTM}"

startupline1="file startup.template{"
startupline2="  pattern { ioc, date, version}"
filedate=$(date '+%m-%d-%y')
for i in `seq 1  9`
do
   segn1=$(($i+1))
   echo $newLine1 | cat > temp.substitutions
   echo $newLine2 | cat >> temp.substitutions
   if [ $i == 9 ] ; then
     echo { \"$line0\", 0$i, $i, $segn1, \"#\"} | cat >> temp.substitutions
   else
     echo { \"$line0\", 0$i, $i, $segn1, \"\"} | cat >> temp.substitutions
   fi
   echo } | cat >> temp.substitutions
   msi -o ../../../iocBoot/ioc-und1-uc0"$i"/st.cmd -S temp.substitutions st_new.template

   iocVersion=$(sed -n "$i"p $IOC_DATA/sioc-und1-uc01/iocInfo/IOC-version-list)
   echo $startupline1 | cat > temp1.substitutions
   echo $startupline2 | cat >> temp1.substitutions
   echo { 0$i, \"$filedate\", $iocVersion} | cat >> temp1.substitutions
   echo } | cat >> temp1.substitutions
   msi -o $IOC/ioc-und1-uc0"$i"/startup.cmd -S temp1.substitutions startup.template
done



for i in `seq 10  34`
do
   segn1=$(($i+1))
   echo $newLine1 | cat > temp.substitutions
   echo $newLine2 | cat >> temp.substitutions
   if [ $i == 33 ] ; then
     echo $newLine1 | cat > temp.substitutions
     echo $newLine2 | cat >> temp.substitutions
     echo { \"$line0\", $i, $i, $segn1, \"#\"} | cat >> temp.substitutions
     echo } | cat >> temp.substitutions
     msi -o ../../../iocBoot/ioc-und1-uc"$i"/st.cmd -S temp.substitutions st_new.template
   else
     echo { \"$line0\", $i, $i, $segn1, \"\"} | cat >> temp.substitutions
     echo } | cat >> temp.substitutions
     msi -o ../../../iocBoot/ioc-und1-uc"$i"/st.cmd -S temp.substitutions st_new.template
   fi

   iocVersion=$(sed -n "$i"p $IOC_DATA/sioc-und1-uc01/iocInfo/IOC-version-list)
   echo $startupline1 | cat > temp1.substitutions
   echo $startupline2 | cat >> temp1.substitutions
   echo { $i, \"$filedate\", $iocVersion} | cat >> temp1.substitutions
   echo } | cat >> temp1.substitutions
   msi -o $IOC/ioc-und1-uc"$i"/startup.cmd -S temp1.substitutions startup.template
done

#rm temp.substitutions
rm temp1.substitutions
rm temp

grep iocBoot $IOC/ioc-und1-uc*/startup.cmd
